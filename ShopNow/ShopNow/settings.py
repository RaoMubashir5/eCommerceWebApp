"""
Django settings for ShopNow project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-llru15)v6xbxyx(msuq^@9#88prb@zu67(yyaz+jr$gn(ar)bv'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'UserApp',
    'Cart',
    'product',
    'order',
    'checkout',
    'django.contrib.sites', #for site management
    'social_django',  #for social login
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

# Add the site ID setting for social authentication
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
     'allauth.account.middleware.AccountMiddleware',  # Add this line
]

ROOT_URLCONF = 'ShopNow.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
                os.path.join(BASE_DIR, 'UserApp', 'FrontEnd', 'templates'),
                os.path.join(BASE_DIR, 'product', 'Frontend', 'templates'),
                os.path.join(BASE_DIR, 'Cart', 'FrontEnd', 'templates'),
                os.path.join(BASE_DIR, 'order', 'Frontend', 'templates'),
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ShopNow.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Define my custom user model
AUTH_USER_MODEL = 'UserApp.Webuser'
MEDIA_ROOT=BASE_DIR / 'media' 
#now it this media folder would contain the other folders for file uploads 
#specified in the model with like: media/myImage 

MEDIA_URL='/media/' #it would be like /media/boss.jpg
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

#sending email backend:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com' #it could be yahoo or hotmail
EMAIL_PORT = 587  #it is a port number of google mail
EMAIL_USE_TLS = True #transmission layer security is true
EMAIL_HOST_USER = 'djangorest45@gmail.com'  #it is the email of sender but actually the app mail added to the gmail
EMAIL_HOST_PASSWORD = 'vfdi ergi fmfv rwkr'  #it is the password that is App password in gmail.
DEFAULT_FROM_EMAIL = 'djangorest45@gmail.com'  #it is the again the sender email, default one.

AUTHENTICATION_BACKENDS = (
    'social_core.backends.google.GoogleOAuth2',  # Google OAuth2 backend
    'django.contrib.auth.backends.ModelBackend',  # Default Django backend
)

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '1088811793728-7k9mrud0e8bog14i5cv985imm6m9p9e4.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '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'

LOGIN_REDIRECT_URL = '/api/googleLogin/'  # Redirect after successful Google login
LOGOUT_REDIRECT_URL = '/api/home/'        # Redirect after logging out
LOGIN_URL = '/accounts/google/login/'     # URL for Google login
